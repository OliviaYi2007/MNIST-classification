







FITTING EPOCH 0:  99%|███████████████████████████████████████████████████████████████████████████████████████▊ | 463/469 [00:15<00:00, 28.21it/s]

FITTING EPOCH 0: 100%|█████████████████████████████████████████████████████████████████████████████████████████| 469/469 [00:15<00:00, 29.65it/s]
TRAIN ACCURACY: 0.9421
TEST ACCURACY: 0.9302







FITTING EPOCH 1:  98%|███████████████████████████████████████████████████████████████████████████████████████  | 459/469 [00:15<00:00, 30.03it/s]

FITTING EPOCH 1: 100%|█████████████████████████████████████████████████████████████████████████████████████████| 469/469 [00:15<00:00, 29.76it/s]
TRAIN ACCURACY: 0.9582
TEST ACCURACY: 0.9437







FITTING EPOCH 2:  93%|██████████████████████████████████████████████████████████████████████████████████▉      | 437/469 [00:14<00:01, 30.29it/s]

FITTING EPOCH 2: 100%|█████████████████████████████████████████████████████████████████████████████████████████| 469/469 [00:15<00:00, 29.82it/s]
TRAIN ACCURACY: 0.9730
FITTING EPOCH 3:   2%|██                                                                                        | 11/469 [00:00<00:15, 30.50it/s]







FITTING EPOCH 3:  93%|██████████████████████████████████████████████████████████████████████████████████▎      | 434/469 [00:14<00:01, 29.57it/s]

FITTING EPOCH 3: 100%|█████████████████████████████████████████████████████████████████████████████████████████| 469/469 [00:15<00:00, 30.11it/s]
TRAIN ACCURACY: 0.9777
FITTING EPOCH 4:   1%|▊                                                                                          | 4/469 [00:00<00:16, 28.99it/s]








FITTING EPOCH 4:  96%|█████████████████████████████████████████████████████████████████████████████████████    | 448/469 [00:15<00:00, 25.66it/s]

FITTING EPOCH 4: 100%|█████████████████████████████████████████████████████████████████████████████████████████| 469/469 [00:16<00:00, 28.44it/s]
TRAIN ACCURACY: 0.9848
FITTING EPOCH 5:   1%|█▏                                                                                         | 6/469 [00:00<00:16, 27.49it/s]







FITTING EPOCH 5:  90%|███████████████████████████████████████████████████████████████████████████████▋         | 420/469 [00:14<00:01, 30.89it/s]

FITTING EPOCH 5: 100%|█████████████████████████████████████████████████████████████████████████████████████████| 469/469 [00:15<00:00, 29.47it/s]
TRAIN ACCURACY: 0.9878
TEST ACCURACY: 0.9649




FITTING EPOCH 6:  61%|█████████████████████████████████████████████████████▉                                   | 284/469 [00:09<00:06, 28.89it/s]
Traceback (most recent call last):
  File "c:\Users\olivi\.vscode\projects\handwrittendigit.py", line 80, in <module>
    for r_xs, r_ys in tqdm(dataloader_train,desc=f"FITTING EPOCH {i}"):
  File "C:\Users\olivi\AppData\Roaming\Python\Python312\site-packages\tqdm\std.py", line 1181, in __iter__
    for obj in iterable:
  File "C:\Users\olivi\AppData\Roaming\Python\Python312\site-packages\torch\utils\data\dataloader.py", line 631, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\olivi\AppData\Roaming\Python\Python312\site-packages\torch\utils\data\dataloader.py", line 675, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olivi\AppData\Roaming\Python\Python312\site-packages\torch\utils\data\_utils\fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
            ~~~~~~~~~~~~^^^^^
  File "C:\Users\olivi\AppData\Roaming\Python\Python312\site-packages\torchvision\datasets\mnist.py", line 146, in __getitem__
    img = self.transform(img)
          ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olivi\AppData\Roaming\Python\Python312\site-packages\torchvision\transforms\transforms.py", line 95, in __call__
    img = t(img)
          ^^^^^^
  File "C:\Users\olivi\AppData\Roaming\Python\Python312\site-packages\torchvision\transforms\transforms.py", line 137, in __call__
    return F.to_tensor(pic)
           ^^^^^^^^^^^^^^^^
  File "C:\Users\olivi\AppData\Roaming\Python\Python312\site-packages\torchvision\transforms\functional.py", line 168, in to_tensor
    img = torch.from_numpy(np.array(pic, mode_to_nptype.get(pic.mode, np.uint8), copy=True))
                                                            ^^^^^^^^
  File "C:\Users\olivi\AppData\Roaming\Python\Python312\site-packages\PIL\Image.py", line 567, in mode
    @property
KeyboardInterrupt